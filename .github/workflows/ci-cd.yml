name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: crm
          POSTGRES_USER: crmuser
          POSTGRES_PASSWORD: crmpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install backend dependencies
        run: |
          cd backend
          npm install

      - name: 📦 Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: 🔧 Fix permissions for node binaries
        run: |
          cd backend
          chmod +x ./node_modules/.bin/* || true

      - name: 🧪 Test backend (Jest)
        run: |
          cd backend
          NODE_ENV=test npm test

      - name: 🏗️ Build frontend
        run: |
          cd frontend
          npm run build

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: 🐳 Build and push Docker image
        run: |
          echo "Ici tu pourrais builder ton image Docker et la pousser sur Docker Hub"
          echo "Exemple : docker build -t tonuser/mini-crm:latest ."
